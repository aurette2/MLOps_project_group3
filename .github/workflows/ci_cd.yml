name: FastAPI CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_USER: user
    #       POSTGRES_PASSWORD: password
    #       POSTGRES_DB: testdb
    #     ports:
    #       - 5432:5432

    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v2

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run tests with pytest (including mocks)
      - name: Run pytest
        run: pytest --maxfail=1 --disable-warnings
        # env:
        #   DATABASE_URL: postgres://user:password@localhost/testdb

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v2

      # Log in to Azure Container Registry
      - name: Log in to Azure Container Registry
        run: echo "${{ secrets.AZURE_PASSWORD }}" | docker login <your-registry-name>.azurecr.io -u ${{ secrets.AZURE_USERNAME }} --password-stdin

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t <your-registry-name>.azurecr.io/project1-fastapi:latest .

      # Push the Docker image to ACR
      - name: Push Docker image to ACR
        run: docker push <your-registry-name>.azurecr.io/project1-fastapi:latest

      # Deploy to Azure Web App (Optional, if using Azure App Service)
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: <your-app-name>
          slot-name: production
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}