# Use an official Python image as a base
FROM python:3.11-slim

# Use an official Python image as a base
# FROM python:3.12

# Set the working directory in the container
WORKDIR /app
    
# Copy the requirements file into the container
COPY /requirements.txt .

# Install the required Python packages
RUN pip install --no-cache-dir --upgrade -r requirements.txt

COPY .env /app/
# Initialize DVC (to avoid the "Not inside a DVC repo" error)
RUN dvc init --no-scm

# Set up environment variables 
ENV AZURE_STORAGE_ACCOUNT=$AZURE_STORAGE_ACCOUNT
ENV AZURE_STORAGE_KEY=$AZURE_STORAGE_KEY

RUN dvc remote add -d azure-remote azure://datasets/

# Pull the DVC dataset
RUN dvc pull

# Copy the entire project directory into the container
COPY /backend/app /app

# Copy the entire dataops folder into the app
COPY /dataops/ /dataops

# Set the environment variable for the data path
ENV DATA_FOR_DRIFT_PATH="/dataops/data/"

# Expose the ports for FastAPI (8000) and Streamlit (8501)
EXPOSE 8000
EXPOSE 8501

# Set environment variables
ENV STREAMLIT_SERVER_PORT=8501
ENV STREAMLIT_SERVER_ADDRESS=0.0.0.0

# Copy the .env file to the container
# COPY .env .env
# COPY /backend/app/starter_code.sh /app
COPY /frontend/ /app

# # Make the script executable
RUN chmod +x /app/starter_code.sh

# # Run the FastAPI app using the built-in fastapi run command
CMD ["./starter_code.sh"]

# Generate a SECRET_KEY and export it
# RUN SECRET_KEY=$(python -c "import secrets; print(secrets.token_hex(32))") && \
#     export SECRET_KEY && \
#     echo "Generated SECRET_KEY: $SECRET_KEY"


# Run the FastAPI app using the built-in fastapi run command
# CMD ["fastapi", "run", "/app/controller.py", "--host","0.0.0.0", "--port", "8000"]
# CMD ["uvicorn", "controller:app", "--host", "0.0.0.0", "--port", "8000" "&&", "Streamlit", "run", "test.py"]